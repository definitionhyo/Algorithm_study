package baekjoon.array2;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class number_2566 {

	public static void main(String[] args) throws IOException {
		
//		문제
//		<그림 1>과 같이 9×9 격자판에 쓰여진 81개의 자연수 또는 0이 주어질 때, 
//		이들 중 최댓값을 찾고 그 최댓값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.
//
//		1) 입력
//		첫째 줄부터 아홉 번째 줄까지 한 줄에 아홉 개씩 수가 주어진다. 
//		주어지는 수는 100보다 작은 자연수 또는 0이다.
//
//		2) 출력
//		2-1) 첫째 줄에 최댓값을 출력하고, 
//		2-2) 둘째 줄에 최댓값이 위치한 행 번호와 열 번호를 빈칸을 사이에 두고 차례로 출력한다. 
//		최댓값이 두 개 이상인 경우 그 중 한 곳의 위치를 출력한다.
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int ary[][] = new int [9][9];
		
//		1) 토큰화 하여 배열에 입력하는 반복문
		for(int i = 0; i < 9; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < 9; j++) {
				ary[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		int max = ary[0][0];;	
		int row = 0;			// 지역변수 초기화(할당X = 출력문에 사용X)
		int column = 0;			// 지역변수 초기화(할당X = 출력문에 사용X)
		
		for(int k = 0; k < 9; k++) {
			for(int l = 0; l < 9; l++) {
				if(ary[k][l] > max) {
					max = ary[k][l];
					row = k;
					column = l;
				}
			}
		}
		
		System.out.println(max);
		System.out.println((row + 1) + " " + (column + 1));
		
	}

}
